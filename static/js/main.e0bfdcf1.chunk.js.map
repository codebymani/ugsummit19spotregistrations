{"version":3,"sources":["undergrad-WHITE.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Option","AutoComplete","Header","Layout","Content","Footer","quiz_api_config","headers","content-type","withCredentials","App","handleSearch","value","emails","indexOf","map","domain","concat","_this","setState","getStateBasedCard","isNullOrUndefined","state","responseId","react_default","a","createElement","card","es_button","onClick","localStorage","removeItem","icon","type","emailChildren","email","key","title","bordered","style","alignItems","justifyContent","display","flexDirection","height","input","onChange","name","target","width","placeholder","allowClear","required","auto_complete","onSearch","mobile","addonBefore","college","filterOption","city","dataSource","es_select","ref","handleSubmit","loading","this","_this2","data","fullname","status","test","notification","open","message","description","post","JSON","stringify","then","response","code","isNaN","parseInt","setItem","catch","error","console","log","getItem","className","layout","backgroundColor","alt","src","require","maxHeight","color","padding","minHeight","flex","fontSize","margin","href","textDecoration","textAlign","Date","getFullYear","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0bfdcf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undergrad-WHITE.c3642b90.png\";","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Menu, Input, AutoComplete, Select, Card, Button, Icon, notification} from 'antd';\nimport { isNullOrUndefined } from 'util';\nimport { post } from 'axios';\n\nconst Option = AutoComplete.Option;\nconst { Header, Content, Footer } = Layout;\n\nconst HOST = 'http://quizapi.stumagz.com:8082/api/register';\n\nconst quiz_api_config = {\n  headers: { 'content-type': 'application/json' },\n  withCredentials: false\n};\n\n\nclass App extends Component {\n  \n  componentWillMount () {\n    this.setState ({\n      email: \"\",\n      emails: [],\n      ref:\"\",\n      name:\"\",\n      mobile:\"\",\n      city:\"\",\n      college:\"\",\n      loading:false,\n      responseId:null\n    });\n  }\n\n  handleSubmit(){\n    \n    let data = {\n      fullname: this.state.name,\n      mobile: this.state.mobile,\n      email: this.state.email,\n      college: this.state.college,\n      city: this.state.city,\n      ref: this.state.ref,\n      status: 0\n    };\n\n    if (!/[a-zA-Z][^#&<>\"~;$^%{}?]{1,50}$/g.test(data.fullname)){\n      notification.open({\n        message: 'Incomplete',\n        description: \"Kindly enter a valid name\"\n      });\n\n      return false;\n    }\n\n    if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/igm.test(data.email)) {\n      notification.open({\n        message: 'Incomplete',\n        description: \"Enter a valid e-mail address\"\n      });\n\n      return false;\n    }\n\n    if (!/^[6-9][0-9]{9}$/g.test(data.mobile)) {\n      notification.open({\n        message: 'Incomplete',\n        description: \"Enter a valid 10 digit mobile number\"\n      });\n\n      return false;\n    }\n\n    if (!/[a-zA-Z][^#&<>\"~;$^%{}?]{1,150}$/g.test(data.college)) {\n      notification.open({\n        message: 'Incomplete',\n        description: \"Enter Valid College Name\"\n      });\n\n      return false;\n    }\n\n    if (!/[a-zA-Z][^#&<>\"~;$^%{}?]{1,150}$/g.test(data.city)) {\n      notification.open({\n        message: 'Incomplete',\n        description: \"Enter a valid city name\"\n      });\n\n      return false;\n    }\n\n    if (data.ref === \"\") {\n      notification.open({\n        message: 'Incomplete',\n        description: \"Enter How you know about UGS ??\"\n      });\n\n      return false;\n    }\n\n    this.setState({ loading: true });\n    post(HOST, JSON.stringify(data), quiz_api_config)\n    .then(response => {\n      this.setState({\n        loading: false\n      });\n      // eslint-disable-next-line eqeqeq\n      if(response.data.code == 200 && !isNaN(parseInt(response.data.message))) {\n        this.setState({ responseId: response.data.message});\n        localStorage.setItem(\"spotRegId\", response.data.message);\n      }\n      else {\n        notification.open({\n          message: 'Something went wrong',\n          description: response.data.message\n        });\n      }\n    })\n    .catch((error) => {\n      this.setState({\n        loading: false\n      });\n      notification.open({\n        message: 'Something went wrong. Please try again later',\n        description: 'Please check if you have already registered'\n      });\n      console.log(\"Iam in catch: \" + error);\n    });\n  }\n\n  handleSearch = (value) => {\n    let emails;\n    if (!value || value.indexOf('@') >= 0) {\n      emails = [];\n    } else {\n      emails = ['gmail.com', 'live.com', 'stumagz.com', 'yahoo.co.in'].map(domain => `${value}@${domain}`);\n    }\n    this.setState({ emails });\n  }\n\n  componentDidMount() {\n    this.setState({\n      responseId: localStorage.getItem(\"spotRegId\")\n    });\n  }\n\n  getStateBasedCard = () => {\n    if (!isNullOrUndefined(this.state.responseId))\n      return (\n        <Card>\n          <h3>Your registraion number is <b>{this.state.responseId}</b></h3>\n          <Button onClick={() => {this.setState({ responseId: null });localStorage.removeItem(\"spotRegId\")}}><Icon type=\"left-circle\" />Back</Button>\n        </Card>\n      )\n    const { emails } = this.state;\n    const emailChildren = emails.map(email => <Option key={email}>{email}</Option>);\n    return (<Card title=\"Please submit below details to register on spot\" bordered={false} style={{ alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\n      <div style={{ height: 400, display: 'flex', justifyContent: 'space-between', flexDirection: 'column' }}>\n        <Input onChange={(value) => this.setState({ name: value.target.value })} style={{ width: 250 }} placeholder=\"Name\" allowClear required />\n        <AutoComplete\n          style={{ width: 250 }}\n          onSearch={this.handleSearch}\n          placeholder=\"Email\"\n          allowClear\n          required\n          onChange={(value) => this.setState({ email: value })}\n        >\n          {emailChildren}\n        </AutoComplete>\n        <Input onChange={(value) => this.setState({ mobile: value.target.value })} style={{ width: 250 }} addonBefore=\"+91\" placeholder=\"Mobile\" allowClear required />\n        <Input onChange={(value) => this.setState({ college: value.target.value })} style={{ width: 250 }} placeholder=\"College / Organisation\" allowClear required />\n        <AutoComplete filterOption={true} onChange={(value) => this.setState({ city: value })} style={{ width: 250 }} placeholder=\"City\" allowClear required dataSource={[\"Hyderabad\", \"Vijayawada\", \"Rangareddy\", \"Vishakapatnam\", \"Nalagonda\", \"Mahabubnagar\"]}/>\n        <Select\n          style={{ width: 250 }}\n          placeholder=\"How do you know about UGS?\"\n          onChange={(value) => this.setState({ ref: value })}\n        >\n          <Option value=\"roadtougs\">Road to UGS</Option>\n          <Option value=\"social\">Social Media</Option>\n          <Option value=\"college\">College Administration</Option>\n          <Option value=\"volunteers\">Volunteers</Option>\n          <Option value=\"other\">Other</Option>\n        </Select><br />\n        <Button onClick={() => this.handleSubmit()} loading={this.state.loading}>\n          Submit\n                </Button>\n      </div>\n    </Card>)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout className=\"layout\">\n          <Header style={{backgroundColor: \"#000\"}}>\n            <img alt=\"logo\" src={require(\"./undergrad-WHITE.png\")} style={{ maxHeight: 60 }} /><span style={{color:\"#fff\"}}>Registration Desk</span>\n          </Header>\n          <Content style={{ padding: '0 50px', minHeight: \"90vh\",alignItems:'center',justifyContent:'center',flex:1,display:'flex', flexDirection:'column', backgroundColor: \"#cb202d\" }}>\n            <p style={{ fontSize: \"15px\", padding: \"5px\", color: \"#fff\", margin: \"10px\" }}> Participate in Undergrad special quiz and win exciting prizes.<br /><a style={{ color: \"#fff\" }} href=\"//bit.ly/stumagzappone\"><em style={{textDecoration:\"underline\"}}>Click here to download app now!</em>👈📱</a></p>\n            {this.getStateBasedCard()}\n          </Content>\n          <Footer style={{ textAlign: 'center', color:\"#fff\", backgroundColor: \"#cb202d\" }}>\n            Undergrad Summit ©{(new Date()).getFullYear()}\n        </Footer>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}